//%h1#visual Visial here. 
%div#viz
//= @stree
:javascript

	var today = new Date();
	var dd = today.getDate();
	var mm = today.getMonth()+1; //January is 0!
	var yyyy = today.getFullYear();
	if(dd < 10) {
		dd = '0' + dd
	} 

	if(mm < 10) {
		mm = '0' + mm
	} 

	var today = yyyy + '-' + mm + '-' + dd;

	var width = 800,
		  height = 500,
		  root;
	

	var force = d3.layout.force()
		  .linkDistance(80)
		  .charge(-220) // how spreaded are the nodes
		  .gravity(.05)
		  .size([width, height])
		  .on("tick", tick);

	var svg = d3.select("#viz").append("svg")
		  .attr("width", width)
		  .attr("height", height);

	var link = svg.selectAll(".link"),
		  node = svg.selectAll(".node");
	root = #{@stree};
	update();
	function update() {
		var nodes = flatten(root),
		    links = d3.layout.tree().links(nodes);

		// Restart the force layout.
		force
		    .nodes(nodes)
		    .links(links)
		    .start();

		// Update links.
		link = link.data(links, function(d) { return d.target.id; });

		link.exit().remove();

		link.enter().insert("line", ".node")
		    .attr("class", "link");

		// Update nodes.
		node = node.data(nodes, function(d) { return d.id; });

		node.exit().remove();

		var nodeEnter = node.enter().append("g")
		    .attr("class", "node")
		    .on("click", click)
		    .call(force.drag);

		nodeEnter.append("circle")
		    .attr("r", function(d) { return Math.sqrt(d.size) / 10 || 18; }); // node size

		nodeEnter.append("text")
		    .attr("dy", ".35em")
		    .text(function(d) { return d.content.name; });

		node.select("circle")
		    .style("fill", color);
	}

	function tick() {
		link.attr("x1", function(d) { return d.source.x; })
		    .attr("y1", function(d) { return d.source.y; })
		    .attr("x2", function(d) { return d.target.x; })
		    .attr("y2", function(d) { return d.target.y; });

		node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
	}

	function color(d) {
		return d.content.start == today ? "red"
				: d._children ? "#3182bd" // collapsed package
		    : d.children ? "#c6dbef" // expanded package
		    : "#fd8d3c"; // leaf node
	}

	// Toggle children on click.
	function click(d) {
		if (d3.event.defaultPrevented) return; // ignore drag
		if (d.children) {
		  d._children = d.children;
		  d.children = null;
		} else {
		  d.children = d._children;
		  d._children = null;
		}
		update();
	}
	
	

	// Returns a list of all nodes under the root.
	function flatten(root) {
		var nodes = [], i = 0;

		function recurse(node) {
		  if (node.children) node.children.forEach(recurse);
		  if (!node.id) node.id = ++i;
		  nodes.push(node);
		}

		recurse(root);
		return nodes;
	}

